"0","#filter down to *collections* with vert & chron data (not just sites)"
"0","vert_chron_sites <- getids(data) #returns site, collection, and dataset IDs for all sites in argument"
"0","#all vertebrate dataset IDs and associated siteID & collunitID"
"0","vert_datasets <- subset(vert_chron_sites, vert_chron_sites$datasetid %in% datasets.info$`vertebrate fauna`$datasetid)"
"0","#all chron dataset IDs and associated siteID & collunitID"
"0","chron_datasets <- subset(vert_chron_sites, vert_chron_sites$datasetid %in% datasets.info$geochronologic$datasetid)"
"0","#all collection unit IDs associated with both dataset types"
"0","vert_chron_collunits <- intersect(unique(vert_datasets$collunitid), unique(chron_datasets$collunitid))"
"0","#add the site and dataset IDs back"
"0","vert_and_chron <- subset(vert_chron_sites, vert_chron_sites$collunitid %in% vert_chron_collunits)"
"0","#rename column and convert to integer"
"0","vert_and_chron <- data.frame(apply(vert_and_chron, 2, as.numeric))"
"0","colnames(vert_and_chron)[which(colnames(vert_and_chron) == ""collunitid"")] <- ""collectionunitid"""
"0","#add the dataset type"
"0","vert_and_chron$datasettype <- NA"
"0","vert_and_chron[which(vert_and_chron$datasetid %in% datasets.info$`vertebrate fauna`$datasetid),""datasettype""] <- ""vertebrate"""
"0","vert_and_chron[which(vert_and_chron$datasetid %in% datasets.info$geochronologic$datasetid),""datasettype""] <- ""geochron"""
"0","#save to disk"
"0","write.csv(vert_and_chron,file = here(""data/vert_and_chron.csv""),row.names = F)"
"0",""
"0","##check how many collections were dropped"
"0","print(paste0(c(""Collections dropped due to not having both vertebrate and geochron datasets:"", "
"0","        apply(vert_chron_sites[which(!vert_chron_sites$collunitid %in% vert_and_chron$collectionunitid), ], "
"0","              2, function(x) length(unique(x)))[2]), collapse = "" ""))"
"1","[1]"
"1"," ""Collections dropped due to not having both vertebrate and geochron datasets: 208"""
"1","
"
