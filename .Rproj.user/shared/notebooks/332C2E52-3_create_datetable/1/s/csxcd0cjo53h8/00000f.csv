"0","##use Tilia calls to assemble list of geochronology data"
"0","require(httr);require(jsonlite);require(dplyr);require(rlist)"
"0","if (exists(""geochrons.ti"")) {if (checkRecent(geochrons.ti) == F) {rm(geochrons.ti)}}"
"0","if (!exists(""geochrons.ti"")) {"
"0","  chron <- subset(vert_and_chron,vert_and_chron$datasettype == ""geochron"")"
"0","  geochrons.ti <- vector(mode = ""list"",length = nrow(chron))"
"0","  print(paste0(c(""Downloading geochron data for"",nrow(chron),""datasets...""),collapse = "" ""))"
"0","  I <- 1; J <- 100"
"0","  while (I <= nrow(chron)){"
"0","    for (i in I:J) {"
"0","      temp <- get_from_tilia(values = chron$datasetid[i], "
"0","                             params = ""datasetid"", "
"0","                             meth = ""getgeochronbydatasetid"")$data"
"0","      if (length(temp) == 0) { "
"0","        temp <- data.frame(geochronid = NA, geochrontypeid = NA, geochrontype = NA,"
"0","                           agetype = NA, depth = NA, thickness = NA, analysisunitid = NA,"
"0","                           analysisunitname = NA, age = NA, errorolder = NA, erroryounger = NA,"
"0","                           infinite = NA, labnumber = NA, materialdated = NA, notes = NA) }"
"0","      geochrons.ti[[i]] <- data.frame(datasetid = chron$datasetid[i], temp)"
"0","    }"
"0","    save(geochrons.ti,file = here(""data/geochrons_ti_temp.RData""))"
"0","    if (i %% 500 == 0) {print(paste0(c(i,""downloaded""),collapse="" ""))}"
"0","    I <- i + 1; J <- i + 100"
"0","    if (J > nrow(chron)) {J <- nrow(chron)} "
"0","  }"
"0","  print(paste0(c(""Done."",length(which(sapply(geochrons.ti,function(x) is.na(x$geochronid[1])))),""of"",length(geochrons.ti),""failed.""),collapse = "" ""))"
"0","}"
"1","[1]"
"1"," ""Downloading geochron data for 2559 datasets..."""
"1","
"
"1","[1]"
"1"," ""500 downloaded"""
"1","
"
"1","[1]"
"1"," ""1000 downloaded"""
"1","
"
"1","[1]"
"1"," ""1500 downloaded"""
"1","
"
"1","[1]"
"1"," ""2000 downloaded"""
"1","
"
"1","[1]"
"1"," ""2500 downloaded"""
"1","
"
"1","[1]"
"1"," ""Done. 1 of 2559 failed."""
"1","
"
"0","geochrons.ti <- distinct(list.stack(geochrons.ti)[, c(1,2,4,5,8:16)])"
"0","geochrons.ti <- subset(geochrons.ti,!is.na(geochrons.ti$geochronid))"
